apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ${containerName}
  name: ${containerName}-${id}
  namespace: ${projectName}
spec:
  selector:
    matchLabels:
      app: ${containerName}
  replicas: 1
  template:
    metadata:
      labels:
        app: ${containerName}
      name: ${containerName}-${id}
    spec:
      containers:
      - name: ${containerName}-${id}
        image: ${containerImage}
        imagePullPolicy: IfNotPresent
        command:
        - powershell.exe
        - -command
        - $listener = New-Object System.Net.HttpListener; $listener.Prefixes.Add('http://*:80/'); $listener.Start();Write-Host('Listening at http://*:80/'); while ($listener.IsListening) { $context = $listener.GetContext(); $response = $context.Response; $content='<html><body><H1>Red Hat OpenShift + Windows Container Workloads</H1></body><img src="https://seekvectorlogo.com/wp-content/uploads/2018/12/red-hat-openshift-vector-logo.png" alt="red hat openshift logo" width="800" height="500"></html>'; $buffer = [System.Text.Encoding]::UTF8.GetBytes($content); $response.ContentLength64 = $buffer.Length; $response.OutputStream.Write($buffer, 0, $buffer.Length); $response.Close(); };
        securityContext:
        securityContext:
          windowsOptions:
            runAsUserName: "ContainerAdministrator"
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: "os"
          operator: "Equal"
          value: "Windows"
          effect: "NoSchedule"